---
name: CI

on:  # yamllint disable-line rule:truthy
  push:
    branches: [main]
  pull_request:
    branches: [main]

  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
        compose_version:
          - 1.29.2
          - 1.29.1
          - 1.29.0
          - 2.0.0
        airflow_version:
          - current
    concurrency:
      group: >-
        ${{ github.event.pull_request.number || github.ref }}
        ${{ matrix.os }}
        ${{ matrix.compose_version }}
        ${{ matrix.airflow_version }}
      cancel-in-progress: true
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - if: matrix.compose_version == '2.0.0'
        name: "Update Docker CLI"
        run: |
          sudo rm "$(command -v docker)";
          curl -fsSL https://test.docker.com | sh;
      - name: "Install Docker Compose"
        env:
          COMPOSE_VERSION: ${{ matrix.compose_version }}
        run: |
          ./scripts/install_compose.sh "${COMPOSE_VERSION}"
      - if: matrix.airflow_version == 'master'
        env:
          AIRFLOW_IMAGE_NAME: 'apache/airflow-ci:main-python3.8'
        run: |
          echo "AIRFLOW_IMAGE_NAME=${AIRFLOW_IMAGE_NAME}" >> $GITHUB_ENV
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: pre-commit/action@v2.0.3
      - run: pip install -r requirements.txt
      - run: pytest tests/ --color=yes
