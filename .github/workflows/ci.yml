name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
        compose_version: [v1, v2]
        airflow_version:
          - 2.0.0
          - 2.0.0b1
          - 2.0.0b2
          - 2.0.0b3
          - 2.0.0rc1
          - 2.0.0rc2
          - 2.0.0rc3
          - 2.0.1
          - 2.0.1rc1
          - 2.0.1rc2
          - 2.0.2
          - 2.0.2rc1
          - 2.1.0
          - 2.1.0rc1
          - 2.1.0rc2
          - 2.1.1
          - 2.1.1rc1
    concurrency:
      group: ${{ github.event.pull_request.number || github.ref }}-${{ matrix.on }}-${{ matrix.airflow_version }}-${{ matrix.compose_version }}
      cancel-in-progress: true
    runs-on: ${{ matrix.os }}
    env:
      AIRFLOW_IMAGE_NAME: 'apache/airflow:${{ matrix.airflow_version }}'
    steps:
      - uses: actions/checkout@v2
      - if: matrix.compose_version == 'v2'
        name: "Update Docker CLI and Docker compose"
        run: |
          sudo rm "$(command -v docker)";
          curl -fsSL https://test.docker.com | sh;
          echo "Installed docker"
          sudo rm -rf $(command -v docker-compose)
          TMP_DIR="$(mktemp -d)"
          curl -fsSL https://github.com/docker/compose-cli/releases/download/v2.0.0-beta.4/docker-compose-linux-amd64 -o "${TMP_DIR}/docker-compose-v2"
          chmod +x "${TMP_DIR}/docker-compose-v2"
          echo -e '#!/bin/bash\nexec docker-compose-v2 compose "${@}"' > "${TMP_DIR}/docker-compose"
          chmod +x "${TMP_DIR}/docker-compose"
          export PATH="${TMP_DIR}:${PATH}"
          echo "PATH=${PATH}" >> $GITHUB_ENV
          echo "Installed docker-compose v2"
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: pre-commit/action@v2.0.3
      - run: pip install -r requirements.txt
      - run: pytest tests/ -vvvv -s --color=yes
